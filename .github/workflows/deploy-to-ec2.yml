name: Build & Deploy to EC2

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build with Maven
        run: |
          if [ -f "./mvnw" ]; then
            chmod +x mvnw
            ./mvnw -DskipTests package
          else
            sudo apt-get update -y
            sudo apt-get install -y maven
            mvn -DskipTests package
          fi

      # (optional) quick SSH sanity check
      - name: Test SSH to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}   # usually 'ubuntu'
          port: ${{ secrets.EC2_SSH_PORT }}   # usually '22'
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "SSH OK on $(hostname)"
            uname -a

      # make sure upload dir exists before copying
      - name: Ensure upload dir exists on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_SSH_PORT }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p /home/ubuntu/upload

      # copy the built jar to the exact filename your deploy.sh expects
      - name: Copy JAR to EC2 (via SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_SSH_PORT }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "target/budgetcaddie-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/upload/budgetcaddie.jar"
          overwrite: true

      # restart the app on the server
      - name: Deploy on EC2 (restart app)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_SSH_PORT }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            bash /home/ubuntu/deploy.sh
