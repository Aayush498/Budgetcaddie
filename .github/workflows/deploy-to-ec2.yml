name: Build & Deploy to EC2

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build with Maven
        run: |
          if [ -f "./mvnw" ]; then
            chmod +x mvnw
            ./mvnw -DskipTests package
          else
            sudo apt-get update -y
            sudo apt-get install -y maven
            mvn -DskipTests package
          fi
          echo "Built artifacts:" && ls -lh target || true

      # Ensure upload dir exists before copy
      - name: Ensure upload dir exists on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}      # usually 'ubuntu'
          port: ${{ secrets.EC2_SSH_PORT }}      # usually 22
          key: ${{ secrets.EC2_SSH_KEY }}
          script: mkdir -p /home/ubuntu/upload

      # Copy any jar we built to the server (to the folder)
      - name: Copy JAR to EC2 (via SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_SSH_PORT }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "target/*.jar"
          target: "/home/ubuntu/upload/"
          overwrite: true

      # Rename the uploaded jar to the exact name deploy.sh expects
      - name: Rename uploaded JAR on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_SSH_PORT }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            shopt -s nullglob
            FILES=(/home/ubuntu/upload/*.jar)
            if [ ${#FILES[@]} -eq 0 ]; then
              echo "No JARs found in /home/ubuntu/upload after SCP." >&2
              exit 1
            fi
            # pick the newest jar
            LATEST=$(ls -1t /home/ubuntu/upload/*.jar | head -n 1)
            echo "Latest uploaded JAR is: $LATEST"
            mv -f "$LATEST" /home/ubuntu/upload/budgetcaddie.jar
            ls -lh /home/ubuntu/upload

      # Kick the deploy script
      - name: Deploy on EC2 (restart app)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          port: ${{ secrets.EC2_SSH_PORT }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            bash /home/ubuntu/deploy.sh
            echo "---- app.out (tail) ----"
            tail -n 80 /home/ubuntu/Budgetcaddie/app.out || true
